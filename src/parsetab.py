
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTIPLICACIONDIVISIONleftYOACTUALIZA AGREGA_LA_COLUMNA AGRUPANDO_POR BORRA_DE_LA CAMBIA_LA_TABLA CLAVE_PRIMA CLAVE_REFERENTE COMA COMO_MUCHO CONTANDO COUNT CREA_LA_TABLA DE_LA_TABLA DIVISION DONDE ELIMINA_LA_COLUMNA EN ENTRE EN_ESTO ES_NULO EXISTE IGUAL LOS_DISTINTOS LOS_VALORES MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE METE_EN MEZCLANDO MULTIPLICACION NOMBRE NO_NULO NUMERO O ORDENA_POR PARECIDO_A PARENDER PARENIZQ POR_DEFECTO PUNTO PUNTO_COMA RESTA SETEA STRING SUMA TIRA_LA_TABLA TODO TRAEME TRANSFORMA_A UNICO VARCHAR WHERE_DEL_GROUP_BY Ystatement : select_statement\n                 | insert_statement\n                 | update_statement\n                 | delete_statement\n                 | alter_statementselect_statement : TRAEME columns DE_LA_TABLA NOMBRE condition_optcondition_opt : condition\n                     | emptyempty :columns : TODO\n               | columns_listcolumns : LOS_DISTINTOS NOMBREcondition : DONDE NOMBRE comparison value PUNTO_COMAvalue : NUMERO\n             | STRINGcomparison : MAYOR_QUE\n                  | MENOR_QUE\n                  | IGUAL\n                  | MAYOR_IGUAL\n                  | MENOR_IGUALinsert_statement : METE_EN NOMBRE PARENIZQ columns_list PARENDER LOS_VALORES PARENIZQ values_list PARENDER PUNTO_COMAcolumns_list : NOMBRE\n                    | columns_list COMA NOMBREvalues_list : value\n                   | values_list COMA valueupdate_statement : ACTUALIZA NOMBRE SETEA assignments DONDE condition PUNTO_COMAassignments : NOMBRE IGUAL valuedelete_statement : BORRA_DE_LA NOMBRE DONDE condition PUNTO_COMAalter_statement : CAMBIA_LA_TABLA NOMBRE alter_actions PUNTO_COMAalter_actions : AGREGA_LA_COLUMNA NOMBRE VARCHAR PARENIZQ NUMERO PARENDER NO_NULO\n                     | ELIMINA_LA_COLUMNA NOMBRE'
    
_lr_action_items = {'TRAEME':([0,],[7,]),'METE_EN':([0,],[8,]),'ACTUALIZA':([0,],[9,]),'BORRA_DE_LA':([0,],[10,]),'CAMBIA_LA_TABLA':([0,],[11,]),'$end':([1,2,3,4,5,6,30,37,40,41,42,47,62,67,72,],[0,-1,-2,-3,-4,-5,-9,-29,-6,-7,-8,-28,-26,-13,-21,]),'TODO':([7,],[14,]),'LOS_DISTINTOS':([7,],[16,]),'NOMBRE':([7,8,9,10,11,16,21,22,24,25,28,29,35,],[13,17,18,19,20,23,30,31,13,33,38,39,46,]),'DE_LA_TABLA':([12,13,14,15,23,31,],[21,-22,-10,-11,-12,-23,]),'COMA':([13,15,31,32,51,52,65,66,73,],[-22,22,-23,22,-14,-15,70,-24,-25,]),'PARENDER':([13,31,32,51,52,64,65,66,73,],[-22,-23,43,-14,-15,68,69,-24,-25,]),'PARENIZQ':([17,48,49,],[24,60,61,]),'SETEA':([18,],[25,]),'DONDE':([19,26,30,34,45,50,51,52,],[26,35,35,45,35,-27,-14,-15,]),'AGREGA_LA_COLUMNA':([20,],[28,]),'ELIMINA_LA_COLUMNA':([20,],[29,]),'PUNTO_COMA':([27,36,39,51,52,53,63,67,69,71,],[37,47,-31,-14,-15,62,67,-13,72,-30,]),'IGUAL':([33,46,],[44,57,]),'VARCHAR':([38,],[48,]),'LOS_VALORES':([43,],[49,]),'NUMERO':([44,54,55,56,57,58,59,60,61,70,],[51,51,-16,-17,-18,-19,-20,64,51,51,]),'STRING':([44,54,55,56,57,58,59,61,70,],[52,52,-16,-17,-18,-19,-20,52,52,]),'MAYOR_QUE':([46,],[55,]),'MENOR_QUE':([46,],[56,]),'MAYOR_IGUAL':([46,],[58,]),'MENOR_IGUAL':([46,],[59,]),'NO_NULO':([68,],[71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'select_statement':([0,],[2,]),'insert_statement':([0,],[3,]),'update_statement':([0,],[4,]),'delete_statement':([0,],[5,]),'alter_statement':([0,],[6,]),'columns':([7,],[12,]),'columns_list':([7,24,],[15,32,]),'alter_actions':([20,],[27,]),'assignments':([25,],[34,]),'condition':([26,30,45,],[36,41,53,]),'condition_opt':([30,],[40,]),'empty':([30,],[42,]),'value':([44,54,61,70,],[50,63,66,73,]),'comparison':([46,],[54,]),'values_list':([61,],[65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> select_statement','statement',1,'p_statement','traductorUSQLaSQL.py',112),
  ('statement -> insert_statement','statement',1,'p_statement','traductorUSQLaSQL.py',113),
  ('statement -> update_statement','statement',1,'p_statement','traductorUSQLaSQL.py',114),
  ('statement -> delete_statement','statement',1,'p_statement','traductorUSQLaSQL.py',115),
  ('statement -> alter_statement','statement',1,'p_statement','traductorUSQLaSQL.py',116),
  ('select_statement -> TRAEME columns DE_LA_TABLA NOMBRE condition_opt','select_statement',5,'p_select_statement','traductorUSQLaSQL.py',121),
  ('condition_opt -> condition','condition_opt',1,'p_condition_opt','traductorUSQLaSQL.py',125),
  ('condition_opt -> empty','condition_opt',1,'p_condition_opt','traductorUSQLaSQL.py',126),
  ('empty -> <empty>','empty',0,'p_empty','traductorUSQLaSQL.py',130),
  ('columns -> TODO','columns',1,'p_columns','traductorUSQLaSQL.py',134),
  ('columns -> columns_list','columns',1,'p_columns','traductorUSQLaSQL.py',135),
  ('columns -> LOS_DISTINTOS NOMBRE','columns',2,'p_columns_distinct','traductorUSQLaSQL.py',150),
  ('condition -> DONDE NOMBRE comparison value PUNTO_COMA','condition',5,'p_condition_where','traductorUSQLaSQL.py',154),
  ('value -> NUMERO','value',1,'p_value','traductorUSQLaSQL.py',158),
  ('value -> STRING','value',1,'p_value','traductorUSQLaSQL.py',159),
  ('comparison -> MAYOR_QUE','comparison',1,'p_comparison_gt','traductorUSQLaSQL.py',163),
  ('comparison -> MENOR_QUE','comparison',1,'p_comparison_gt','traductorUSQLaSQL.py',164),
  ('comparison -> IGUAL','comparison',1,'p_comparison_gt','traductorUSQLaSQL.py',165),
  ('comparison -> MAYOR_IGUAL','comparison',1,'p_comparison_gt','traductorUSQLaSQL.py',166),
  ('comparison -> MENOR_IGUAL','comparison',1,'p_comparison_gt','traductorUSQLaSQL.py',167),
  ('insert_statement -> METE_EN NOMBRE PARENIZQ columns_list PARENDER LOS_VALORES PARENIZQ values_list PARENDER PUNTO_COMA','insert_statement',10,'p_insert_statement','traductorUSQLaSQL.py',172),
  ('columns_list -> NOMBRE','columns_list',1,'p_columns_list','traductorUSQLaSQL.py',176),
  ('columns_list -> columns_list COMA NOMBRE','columns_list',3,'p_columns_list','traductorUSQLaSQL.py',177),
  ('values_list -> value','values_list',1,'p_values_list','traductorUSQLaSQL.py',184),
  ('values_list -> values_list COMA value','values_list',3,'p_values_list','traductorUSQLaSQL.py',185),
  ('update_statement -> ACTUALIZA NOMBRE SETEA assignments DONDE condition PUNTO_COMA','update_statement',7,'p_update_statement','traductorUSQLaSQL.py',193),
  ('assignments -> NOMBRE IGUAL value','assignments',3,'p_assignments','traductorUSQLaSQL.py',197),
  ('delete_statement -> BORRA_DE_LA NOMBRE DONDE condition PUNTO_COMA','delete_statement',5,'p_delete_statement','traductorUSQLaSQL.py',202),
  ('alter_statement -> CAMBIA_LA_TABLA NOMBRE alter_actions PUNTO_COMA','alter_statement',4,'p_alter_statement','traductorUSQLaSQL.py',207),
  ('alter_actions -> AGREGA_LA_COLUMNA NOMBRE VARCHAR PARENIZQ NUMERO PARENDER NO_NULO','alter_actions',7,'p_alter_actions','traductorUSQLaSQL.py',211),
  ('alter_actions -> ELIMINA_LA_COLUMNA NOMBRE','alter_actions',2,'p_alter_actions','traductorUSQLaSQL.py',212),
]
